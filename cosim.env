###
# Find the absolute script path for this file
###
pushd . > '/dev/null';
SCRIPT_PATH="${BASH_SOURCE[0]:-$0}";
while [ -h "$SCRIPT_PATH" ];
do
    cd "$( dirname -- "$SCRIPT_PATH"; )";
    SCRIPT_PATH="$( readlink -f -- "$SCRIPT_PATH"; )";
done
cd "$( dirname -- "$SCRIPT_PATH"; )" > '/dev/null';
SCRIPT_PATH="$( pwd; )";
popd  > '/dev/null';

# =======================================================
# This section should be checked before running CST
# =======================================================
export LOCAL_UID=$UID
export LOCAL_USER=$USER

# Co-simulation tool host
export CST_HOST=$(hostname -A | awk '{print $1}')
export CST_WSL_HOST=
export CST_WSL_PORT=

# login credentials for group, user, pwd and home in docker
export CST_GID=9002
export CST_GRP=runner
export CST_UID=9001
export CST_USER=worker
export CST_PASSWORD=$CST_USER
export CST_HOME=/home/$CST_USER

# Co-simulation tool directories
export CST_ROOT=$SCRIPT_PATH
export BUILD_DIR=$CST_ROOT/scripts/build
export DOCKER_DIR=$CST_ROOT/scripts/docker
export STACK_DIR=$CST_ROOT/scripts/stack

# database, same name for mongo/postgres cst pair
export CST_DB=copper

# PostgresSql environment
export CST_POSTGRES_DB=$CST_DB
export POSTGRES_HOST=$CST_HOST
export POSTGRES_PORT=5432
# Launch postgres with admin
export PGADMIN_DEFAULT_EMAIL=user@domain.com
export PGADMIN_DEFAULT_PASSWORD=SuperSecret

# Mongo environment
export CST_MONGO_DB=$CST_DB
export MONGO_HOST=mongodb://$CST_HOST
export MONGO_PORT=27017
# Launch mongo with admin
export MONGODB_INITDB_ROOT_USERNAME=admin
export MONGODB_INITDB_ROOT_PASSWORD=SuperSecret

# =======================================================
# End section CST
# =======================================================

###
# Airflow environment
###
# add user id for linux
export AIRFLOW_UID=$(id -u)
# add user id for windows
# export AIRFLOW_UID=50000
export AIRFLOW_GID=0
export AIRFLOW_PROJ_DIR=$CST_ROOT/run
# export _AIRFLOW_WWW_USER_USERNAME=
# export _AIRFLOW_WWW_USER_PASSWORD=

# Populate environment variables to docker files
envsubst < $DOCKER_DIR/env/airflow.Dockerfile > $DOCKER_DIR/airflow.Dockerfile
envsubst < $DOCKER_DIR/env/jupyter.Dockerfile > $DOCKER_DIR/jupyter.Dockerfile
envsubst < $DOCKER_DIR/env/python.Dockerfile > $DOCKER_DIR/python.Dockerfile
envsubst < $STACK_DIR/env/init-mongo.js > $STACK_DIR/init-mongo.js
envsubst < $STACK_DIR/env/init-db.sql > $STACK_DIR/init-db.sql

###
# Building without docker define LOCAL_ENV
###
LOCAL_ENV=yes
if [[ -z $LOCAL_ENV ]]; then
    echo "No local environment build variables defined"
else
    # For root directories for docker, remove /grid for the following
    export REPO_DIR=$HOME/grid/repo
    export INSTDIR=$HOME/grid/tenv
#    export TESPDIR=$HOME/grid/tesp
#    export MESPDIR=$HOME/grid/mesp

    # COMPILE exports
    export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    export PYHELICS_INSTALL=$INSTDIR
    export GLPATH=$INSTDIR/lib/gridlabd:$INSTDIR/share/gridlabd
    export CPLUS_INCLUDE_PATH=/usr/include/hdf5/serial:$INSTDIR/include
#    export FNCS_INCLUDE_DIR=$INSTDIR/include
#    export FNCS_LIBRARY=$INSTDIR/lib
    export LD_LIBRARY_PATH=$INSTDIR/lib
    export LD_RUN_PATH=$INSTDIR/lib
    # export BENCH_PROFILE=1

    # PATH exports
    export PATH=$INSTDIR/bin:~/bin:~/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
    export PATH=$JAVA_HOME:$PATH
#    export PATH=$PATH:$INSTDIR/energyplus
#    export PATH=$PATH:$INSTDIR/energyplus/PreProcess
#    export PATH=$PATH:$INSTDIR/energyplus/PostProcess
#    export PATH=$PATH:$TESPDIR/scripts/helpers

    # PSST environment variables
    export PSST_SOLVER=ipopt
    # export PSST_SOLVER=$INSTDIR/ibm/cplex/bin/x86-64_linux/cplexamp
    # 'PSST_SOLVER path' -- one of "cbc", "ipopt", "$INSTDIR/ibm/cplex/bin/x86-64_linux/cplexamp"
    export PSST_WARNING=ignore
    # 'PSST_WARNING action' -- one of "error", "ignore", "always", "default", "module", or "once"

    # PROXY export if needed
    # export HTTPS_PROXY=http://proxy01.pnl.gov:3128
fi

###
# Start the python virtual environment if available
###
if [[ -z $VIRTUAL_ENV ]]; then
    if [ -d "$HOME/grid/venv/bin" ]; then
        . $HOME/grid/venv/bin/activate
        echo "Using python virtual environment path -> $VIRTUAL_ENV"
    else
        echo "No python virtual environment has been set!"
    fi
else
    echo "Already using python virtual environment path -> $VIRTUAL_ENV"
fi
