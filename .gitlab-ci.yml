variables:
  DEVOPS_SERVER: "ecomp-devops.pnl.gov"
  DEVOPS_USER: "devops"
  GIT_URL: "https://$CI_DEPLOY_USER:$CI_DEPLOY_PASSWORD@devops.pnnl.gov/e-comp/thrust-3/copper.git"
  COPPER_DIR: "copper_$CI_JOB_ID"

image: python:3.12

.__setup_ssh: &setup_ssh |
  mkdir -p ~/.ssh && chmod 0700 ~/.ssh
  touch ~/.ssh/known_hosts && chmod 0700 ~/.ssh/known_hosts
  if ! ssh-keyscan $DEVOPS_SERVER | tee --output-error=warn ~/.ssh/known_hosts; then
    echo "Failed to reach DEVOPS_SERVER at $DEVOPS_SERVER"
    exit 1
  fi
  echo "$ENV_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  chmod 0600 ~/.ssh/id_rsa
  export SSH_CMD="ssh -i ~/.ssh/id_rsa -l $DEVOPS_USER $DEVOPS_SERVER"
  if [ -n "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" ]; then
    export BRANCH_NAME=$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
  else
    export BRANCH_NAME=$CI_COMMIT_BRANCH
  fi

stages:
  - test
  - build-publish
  - integration-test

test:
  stage: test
  tags:
    - ecomp
  before_script:
    - apt-get update && apt-get install -y make wget ca-certificates
  script:
    - export HTTPS_PROXY=http://proxy01.pnl.gov:3128
    - export https_proxy=http://proxy01.pnl.gov:3128
    - make venv test
  rules:
    # Rule 1: Run for MRs that are not draft
    - if: '$CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TITLE !~ /^Draft:/'
      when: always
    # Default: Do not run, but can manually run
    - when: manual
      
build-publish:
  stage: build-publish
  tags:
    - ecomp-integration-test
  variables:
    GIT_STRATEGY: none
  rules:
    # Rule 1: Run for MRs that are not draft
    - if: '$CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TITLE !~ /^Draft:/'
      when: always
    # Default: Do not run, but can manually run
    - when: manual
  script:
    - *setup_ssh
    - >
      $SSH_CMD '
      docker login devops-registry.pnnl.gov -u '$CI_DEPLOY_USER' -p '$CI_DEPLOY_PASSWORD' &&
      mkdir -p ~/pipeline && cd ~/pipeline &&
      git clone --depth 1 --branch '$BRANCH_NAME' --single-branch '$GIT_URL' '$COPPER_DIR' &&
      cd '$COPPER_DIR'/scripts &&
      ./update_cosim_env.sh '$DEVOPS_SERVER' &&
      ./cleanup_pipeline_folders.sh &&
      ./cleanup_images.sh &&
      ./build_publish_images.sh'
  needs:
    - test

integration-test:
  stage: integration-test
  tags:
    - ecomp-integration-test
  timeout: 2h
  variables:
    GIT_STRATEGY: none
  rules:
    # Rule 1: Run for MRs that are not draft
    - if: '$CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TITLE !~ /^Draft:/'
      when: always
    # Default: Do not run, but can manually run
    - when: manual
  script:
    - *setup_ssh
    - >
      $SSH_CMD '
      docker login devops-registry.pnnl.gov -u '$CI_DEPLOY_USER' -p '$CI_DEPLOY_PASSWORD' &&
      mkdir -p ~/pipeline && cd ~/pipeline &&
      git clone --depth 1 --branch '$BRANCH_NAME' --single-branch '$GIT_URL' '$COPPER_DIR' &&
      cd '$COPPER_DIR'/scripts &&
      ./update_cosim_env.sh '$DEVOPS_SERVER' &&
      ./download_images.sh &&
      ./integration_test.sh'
  needs:
    - build-publish
