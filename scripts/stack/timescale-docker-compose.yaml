# Optional Jupyter Notebook service
services:
  jupyter_notebook:
    image: "cosim-jupyter:latest"
    container_name: ${CONTAINER_NAME:-jupyter_notebook}
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      GRANT_SUDO: "yes"
      CST_HOST: ${CST_HOST}
      LOCAL_USER: ${LOCAL_USER}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "8888:8888"
    volumes:
      - ${AIRFLOW_PROJ_DIR}:/home/jovyan/work
    depends_on:
      - database
    links:
      - database
    networks:
      - sim_net

  database:
    image: timescale/timescaledb:latest-pg12
    container_name: ${CONTAINER_NAME:-database}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_DB: "${CST_DB}"
      POSTGRES_USER: "${CST_USER}"
      POSTGRES_PASSWORD: "${CST_PASSWORD}"
    command: postgres -c 'max_connections=1000'
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${CST_USER}",
          "-d",
          "${CST_DB}"
        ]
      interval: 5s
      retries: 5
    restart: always
    volumes:
      - cst_postgres:/var/lib/postgresql/data
      - $STACK_DIR/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sim_net

  mongodb:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: ${CONTAINER_NAME:-mongodb}
    ports:
      - "27017:27017"
    expose:
      - "27017"
    environment:
      MONGO_INITDB_DATABASE: "${CST_DB}"
      MONGODB_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGODB_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
    volumes:
      - cst_mongo:/data/db
      - $STACK_DIR/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - sim_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ${CONTAINER_NAME:-pgadmin}
    ports:
      - "80:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    networks:
      - sim_net

  mongoku:
    image: huggingface/mongoku
    container_name: ${CONTAINER_NAME:-mongoku}
    ports:
      - "3100:3100"
    depends_on:
      - mongodb
    networks:
      - sim_net

  mongoexpress:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: ${CONTAINER_NAME:-mongoexpress}
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_AUTH_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_AUTH_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: false
      ME_CONFIG_MONGODB_AUTH_DATABASE: "${CST_DB}"
    networks:
      - sim_net

  grafana:
    image: grafana/grafana:10.2.4-ubuntu
    container_name: ${CONTAINER_NAME:-grafana}
    restart: unless-stopped
    environment:
      - GF_LOG_LEVEL=info
      - CST_HOST=${CST_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "3000:3000"
    networks:
      - sim_net
    volumes:
      - ${STACK_DIR}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ${STACK_DIR}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
#      - ${STACK_DIR}/grafana/dashboards:/etc/grafana/dashboards

volumes:
  cst_mongo: null
  cst_postgres: null

# Create a custom network for bridging the containers
networks:
  sim_net: null